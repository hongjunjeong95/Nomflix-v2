{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Loader.js","Components/Poster.js","Components/Section.js","Routes/Movie/MoviePresenter.js","Routes/Movie/index.js","Routes/Movie/MovieContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","process","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","role","aria-label","Image","props","bgUrl","Rating","span","ImageContainer","Title","Year","Poster","imageUrl","title","rating","year","isMovie","to","require","length","substring","section","h2","Grid","Section","children","MoviePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","MovieContainer","state","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","tv","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","airingToday","topRated","TVContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","Header","header","List","ul","li","current","SLink","Link","withRouter","exact","path","component","Movie","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","dotenv","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab62c59c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: process.env.REACT_APP_TMDB_API,\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\n// eslint-disable-next-line\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  width: 100%;\r\n  height: 180px;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.section`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Loader from \"Components/Loader\";\r\nimport Poster from \"Components/Poster\";\r\nimport Section from \"Components/Section\";\r\n\r\nconst Container = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst MoviePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n        <Section title=\"Upcoming\">\r\n          {upcoming.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n        <Section title=\"Popular\">\r\n          {popular.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nMoviePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default MoviePresenter;\r\n","import MovieContainer from \"./MovieContainer\";\r\n\r\nexport default MovieContainer;\r\n","import { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport MoviePresenter from \"./MoviePresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movie information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <MoviePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Loader from \"Components/Loader\";\r\nimport Poster from \"Components/Poster\";\r\nimport Section from \"Components/Section\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n  error,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date?.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\n// eslint-disable-next-line\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Loader from \"Components/Loader\";\r\nimport Poster from \"Components/Poster\";\r\nimport Section from \"Components/Section\";\r\n\r\nconst Container = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst TVPresenter = ({ airingToday, topRated, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Section title=\"Now Playing\">\r\n          {airingToday.map((tv) => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n        <Section title=\"Upcoming\">\r\n          {topRated.map((tv) => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n        <Section title=\"Popular\">\r\n          {popular.map((tv) => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    airingToday: null,\r\n    topRated: null,\r\n    popular: null,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n\r\n      this.setState({\r\n        airingToday,\r\n        topRated,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movie information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { airingToday, topRated, popular, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        airingToday={airingToday}\r\n        topRated={topRated}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\n\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n    } = this.props;\r\n    let result = null;\r\n    const { isMovie } = this.state;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(id));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(id));\r\n      }\r\n      this.setState({\r\n        result,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find anything.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movie</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Movie from \"Routes/Movie\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Header from \"./Header\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Movie} />\r\n        <Route exact path=\"/tv\" component={TV} />\r\n        <Route exact path=\"/search\" component={Search} />\r\n        <Route exact path=\"/movie/:id\" component={Detail} />\r\n        <Route exact path=\"/tv/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\"></Redirect>\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import Router from \"Components/Router\";\nimport React from \"react\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <GlobalStyles />\n        <Router />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport dotenv from \"dotenv\";\n\nimport App from \"./Components/App\";\n\ndotenv.config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}